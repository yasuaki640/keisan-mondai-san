name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      title: 'Get a JWT via given credentials.'
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: dolores
        type: string
      password:
        name: password
        description: ''
        required: true
        example: enim
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: necessitatibus
        type: string
      d_o_b:
        name: d_o_b
        description: 'Must be a valid date. Must be a date before or equal to <code>today</code>.'
        required: true
        example: '1996-02-17'
        type: string
      sex:
        name: sex
        description: 'Must be at least 0. Must not be greater than 1.'
        required: false
        example: 1
        type: integer
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: lavada42@example.org
        type: string
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: true
        example: crdr
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users/me
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{user}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: ''
        required: true
        example: 7
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - PUT
    uri: 'api/users/{user}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: ''
        required: true
        example: 11
        type: integer
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: soluta
        type: string
      d_o_b:
        name: d_o_b
        description: 'Must be a valid date in the format <code>Y-m-d</code>. Must be a date before or equal to <code>today</code>.'
        required: false
        example: '2018-01-12'
        type: string
      sex:
        name: sex
        description: 'Must be at least 0. Must not be greater than 1.'
        required: false
        example: 1
        type: integer
      email:
        name: email
        description: 'Must be a valid email address.'
        required: false
        example: tsenger@example.com
        type: string
      password:
        name: password
        description: 'Must be at least 8 characters.'
        required: false
        example: mxxat
        type: string
    responses: []
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{user}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user:
        name: user
        description: ''
        required: true
        example: 12
        type: integer
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/questions
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      question_summary_id:
        name: question_summary_id
        description: ''
        required: true
        example: 16
        type: integer
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/question-summaries/{questionSummary}'
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      questionSummary:
        name: questionSummary
        description: ''
        required: true
        example: 3
        type: integer
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/question-summaries
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      operator:
        name: operator
        description: 'Must be one of <code>add</code>, <code>sub</code>, <code>multi</code>, or <code>divide</code>.'
        required: true
        example: divide
        type: string
      num_of_questions:
        name: num_of_questions
        description: ''
        required: true
        example: 3
        type: integer
    responses: []
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/question-summaries
    metadata:
      title: ''
      description: ''
      authenticated: false
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          vary: Origin
        description: null
    responseFields: []
