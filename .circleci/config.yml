version: 2
jobs:
  build:
    docker:
      - image: circleci/php:8.0.3-fpm-node-browsers
      - image: circleci/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: laravel_local_test
          MYSQL_USER: phper
          MYSQL_PASSWORD: secret

    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip pdo_mysql

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "./backend/composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          working_directory: ./backend
          command: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "./backend/composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "./backend/package.json" }}
            - node-v1-
      - run:
          working_directory: ./backend
          command: yarn install
      - save_cache:
          key: node-v1-{{ checksum "./backend/package.json" }}
          paths:
            - node_modules

      # setup env
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          working_directory: ./backend
          command: cp .env.example .env
      - run:
          working_directory: ./backend
          command: php artisan jwt:secret
      - run:
          working_directory: ./backend
          command: php artisan migrate --env=testing --database=mysql_test --force
      - run:
          working_directory: ./backend
          command: vendor/bin/phpunit
