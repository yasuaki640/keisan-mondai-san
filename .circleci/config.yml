version: 2

orbs:
  slack: circleci/slack@4.3.0

jobs:
  build:
    docker:
      - image: circleci/php:8.0.3-fpm-node-browsers
      - image: circleci/mysql:8.0
        environment:
          MYSQL_DATABASE: laravel_test
          MYSQL_USER: phper
          MYSQL_PASSWORD: secret
          MYSQL_ROOT_PASSWORD: 'root'
    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
      - run: sudo docker-php-ext-install zip pdo_mysql

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "./backend/composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          working_directory: ./backend
          command: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "./backend/composer.json" }}
          paths:
            - ./vendor
      - restore_cache:
          keys:
            - node-v1-{{ checksum "./backend/package.json" }}
            - node-v1-
      - run:
          working_directory: ./backend
          command: yarn install
      - save_cache:
          key: node-v1-{{ checksum "./backend/package.json" }}
          paths:
            - node_modules

      # setup env
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          working_directory: ./backend
          command: cp .env.example .env
      - run:
          name: create jwt secret
          working_directory: ./backend
          command: php artisan jwt:secret
      - run:
          name: run migration
          working_directory: ./backend
          command: php artisan migrate --env=testing --database=mysql_test --force

      - run:
          name: run phpunit tests
          working_directory: ./backend
          command: vendor/bin/phpunit

      - run:
          name: check if can reset migrate
          working_directory: ./backend
          command: php artisan migrate:rollback --env=testing --database=mysql_test --force

      - slack/notify:
          channel: "circle-ci"
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":tada::tada::tada: *Success!*"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project:*\n${CIRCLE_PROJECT_REPONAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*When:*\n$(TZ=Asia/Tokyo date +'%Y/%m/%d %T')"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job:*\n${CIRCLE_JOB}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author:*\n${CIRCLE_USERNAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${CIRCLE_BRANCH}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Tag:*\n${CIRCLE_TAG}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }

      - slack/notify:
          channel: "circle-ci"
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":japanese_ogre::japanese_ogre::japanese_ogre: *Failed* :bangbang:"
                  }
                },
                {
                  "type": "section",
                  "fields": [
                    {
                      "type": "mrkdwn",
                      "text": "*Project:*\n${CIRCLE_PROJECT_REPONAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*When:*\n$(TZ=Asia/Tokyo date +'%Y/%m/%d %T')"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Job:*\n${CIRCLE_JOB}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Author:*\n${CIRCLE_USERNAME}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Branch:*\n${CIRCLE_BRANCH}"
                    },
                    {
                      "type": "mrkdwn",
                      "text": "*Tag:*\n${CIRCLE_TAG}"
                    }
                  ]
                },
                {
                  "type": "actions",
                  "elements": [
                    {
                      "type": "button",
                      "text": {
                        "type": "plain_text",
                        "text": "View Job"
                      },
                      "url": "${CIRCLE_BUILD_URL}"
                    }
                  ]
                }
              ]
            }
